
USE [SGAgroVictoriaDB]
GO

-------------------------------------------------------------------------
-- PROCEDIMIENTOS ALMACENADOS DE UBICACIONES
-------------------------------------------------------------------------

CREATE PROCEDURE SP_GET_UBICACIONES
AS
BEGIN
    SELECT 	
		P.ID_PROVINCIA,
		P.NOMBRE_PROVINCIA,				
		C.ID_CANTON,
		C.NOMBRE_CANTON,
		D.ID_DISTRITO,
		D.NOMBRE_DISTRITO			
    FROM 
        PROVINCIAS P
    LEFT JOIN 
        CANTONES C
			ON P.ID_PROVINCIA = C.ID_PROVINCIA
    LEFT JOIN 
        DISTRITOS D
			ON C.ID_CANTON = D.ID_CANTON
    ORDER BY 
        P.ID_PROVINCIA, 
        C.ID_CANTON, 
        D.ID_DISTRITO;
END;
GO

-------------------------------------------------------------------------
-- PROCEDIMIENTOS ALMACENADOS DE EMPLEADOS
-------------------------------------------------------------------------

CREATE PROCEDURE SP_GET_EMPLEADOS	
AS
BEGIN	
	SELECT	
		E.ID_EMPLEADO,
		E.IDENTIFICACION,
		E.NOMBRE_EMPLEADO,
		E.APELLIDO_EMPLEADO,
		E.EDAD,
		E.CORREO,
		D.ID_DISTRITO,
		D.NOMBRE_DISTRITO
	FROM	
		EMPLEADOS E
	INNER JOIN
		DISTRITOS D
			ON E.ID_DISTRITO = D.ID_DISTRITO;
END;
GO

CREATE PROCEDURE SP_INSERT_EMPLEADOS
	@ID_DISTRITO				BIGINT,
	@ESTADO						BIT,
	@NOMBRE_EMPLEADO			VARCHAR(120),
	@APELLIDO_EMPLEADO			VARCHAR(120),
	@EDAD						INT,
	@CORREO						VARCHAR(180),
	@IDENTIFICACION				INT
AS
BEGIN	
	IF NOT EXISTS(SELECT 1 FROM EMPLEADOS WHERE IDENTIFICACION = @IDENTIFICACION)
	BEGIN
		INSERT INTO EMPLEADOS
		(
			ID_DISTRITO,
			ESTADO,
			NOMBRE_EMPLEADO,
			APELLIDO_EMPLEADO,
			EDAD,
			CORREO,
			IDENTIFICACION,
			AUSENCIAS
		)
		VALUES 
		(
			@ID_DISTRITO,
			@ESTADO,
			@NOMBRE_EMPLEADO,
			@APELLIDO_EMPLEADO,
			@EDAD,
			@CORREO,
			@IDENTIFICACION,
			0
		)
	END
END;
GO

-------------------------------------------------------------------------
-- PROCEDIMIENTOS ALMACENADOS DE TIPOS_CREDENCIALES
-------------------------------------------------------------------------

CREATE PROCEDURE SP_GET_TIPOS_CREDENCIALES	
AS
BEGIN	
	SELECT	
		ID_TIPO_CREDENCIAL,
		NOMBRE_TIPO_CREDENCIAL,
		DESCRIPCION_TIPO_CREDENCIAL,
		ESTADO
	FROM	
		TIPOS_CREDENCIALES;
END;
GO

CREATE PROCEDURE SP_INSERT_TIPOS_CREDENCIALES
	@ESTADO                              BIT,
	@NOMBRE_TIPO_CREDENCIAL              VARCHAR(42),
	@DESCRIPCION_TIPO_CREDENCIAL         VARCHAR(180)
AS
BEGIN	
	IF NOT EXISTS(SELECT 1 FROM TIPOS_CREDENCIALES WHERE NOMBRE_TIPO_CREDENCIAL = @NOMBRE_TIPO_CREDENCIAL)
	BEGIN
		INSERT INTO TIPOS_CREDENCIALES
		(        
			ESTADO,                     
			NOMBRE_TIPO_CREDENCIAL,     
			DESCRIPCION_TIPO_CREDENCIAL			
		)
		VALUES 
		(
			@ESTADO,                     
			@NOMBRE_TIPO_CREDENCIAL,     
			@DESCRIPCION_TIPO_CREDENCIAL
		)
	END
END;
GO

-------------------------------------------------------------------------
-- PROCEDIMIENTOS ALMACENADOS DE CREDENCIALES
-------------------------------------------------------------------------

CREATE PROCEDURE SP_GET_USUARIOS
AS
BEGIN	
	SELECT	
		E.ID_EMPLEADO,
		E.IDENTIFICACION,
		E.NOMBRE_EMPLEADO,
		E.APELLIDO_EMPLEADO,
		T.ID_TIPO_CREDENCIAL,
		T.NOMBRE_TIPO_CREDENCIAL,
		C.ID_CREDENCIAL,
		C.ESTADO   
	FROM             	
		CREDENCIALES C
	INNER JOIN
		TIPOS_CREDENCIALES T
			ON C.ID_TIPO_CREDENCIAL = T.ID_TIPO_CREDENCIAL
	INNER JOIN
		EMPLEADOS E
			ON C.ID_EMPLEADO = E.ID_EMPLEADO
	INNER JOIN
		DISTRITOS D
			ON E.ID_DISTRITO = D.ID_DISTRITO
END;
GO

CREATE PROCEDURE SP_INSERT_CREDENCIALES
	@ID_EMPLEADO                         BIGINT,
	@ID_TIPO_CREDENCIAL                  BIGINT,
	@ESTADO                              BIT,
	@USUARIO                             VARCHAR(42),
	@CLAVE                               VARCHAR(60)
AS
BEGIN	
	IF NOT EXISTS(SELECT 1 FROM CREDENCIALES WHERE ID_EMPLEADO = @ID_EMPLEADO)
	BEGIN
		INSERT INTO CREDENCIALES
		(        
			ID_EMPLEADO,    
			ID_TIPO_CREDENCIAL, 
			ESTADO,         
			USUARIO,
			CLAVE  
		)
		VALUES 
		(
			@ID_EMPLEADO,        
			@ID_TIPO_CREDENCIAL, 
			@ESTADO,
			@USUARIO,
			@CLAVE
		)
	END
END;
GO

-------------------------------------------------------------------------
-- PROCEDIMIENTOS ALMACENADOS DE PROVEEDORES
-------------------------------------------------------------------------

-->